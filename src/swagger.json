{
  "swagger": "2.0",
  "info": {
    "description": "SMS MANAGEMENT API",
    "version": "1.0.0",
    "title": "SMS Management API",
    "contact": {
      "email": "ezrqnkemboi@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "Users Management"
    },
    {
      "name": "Messages",
      "description": "Messages Management"
    },
    {
      "name": "Contacts",
      "description": "Contacts Management"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Homepage"
        ],
        "summary": "Homepage URL",
        "description": "Get homepage URL",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Welcome to SMS managament application."
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Add new Contact",
        "description": "Adding new contacts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New CONTACT Object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Contact Created"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get All Contacts",
        "description": "Get all contacts in the system",
        "operationId": "getContacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Contact"
              }
            }
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create new user",
        "description": "Add new user to the DB",
        "operationId": "signupUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New User Object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account was created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/signin": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Signin into an existing account",
        "description": "Signin into an existing account",
        "operationId": "signinUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Signin into an existing Account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Signed in successfully"
          },
          "400": {
            "description": "Inccorrect credentials"
          }
        }
      }
    },
    "/messages": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Send new Message",
        "description": "Add new sms to the DB",
        "operationId": "sendNewMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New SMS Object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SMS"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Message was sent successfully"
          },
          "400": {
            "description": "You must be logged in to perform this action"
          }
        }
      },
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get All Messages",
        "description": "Get all messages regardless of the sender",
        "operationId": "getAll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SMS"
              }
            }
          }
        }
      }
    },
    "/messages/:id": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Get Single Message",
        "description": "",
        "operationId": "getOne",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id of the message to retrieve ",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SMS"
            }
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "Message not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Messages"
        ],
        "summary": "Update Message",
        "description": "Update a message",
        "operationId": "updateMessage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the message to be updated",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "operation successful"
          },
          "404": {
            "description": "Message was not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Messages"
        ],
        "summary": "Delete Message",
        "description": "Delete Single Message",
        "operationId": "deleteMessage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the message to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "operation successful"
          },
          "404": {
            "description": "Invalid id supplied"
          }
        }
      }
    },
    "/contacts/:id": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get single Contact",
        "description": "",
        "operationId": "getSingleContact",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id of the contact to retrieve ",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update Contact",
        "description": "Update Single Contact",
        "operationId": "updateContact",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contadct to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "operation successful"
          },
          "404": {
            "description": "Invalid id supplied"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete Contact",
        "description": "Delete Single Contact with all messages related to it",
        "operationId": "deleteContact",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contadct to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "operation successful"
          },
          "404": {
            "description": "Invalid id supplied"
          }
        }
      }
    }
  },
  "definitions": {
    "Users": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        }
      }
    },
    "SMS": {
      "type": "object",
      "properties": {
        "sender": {
          "type": "string"
        },
        "receiver": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      }
    }
  }
}